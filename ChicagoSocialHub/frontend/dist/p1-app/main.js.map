{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/find/find.component.css","webpack:///./src/app/components/find/find.component.html","webpack:///./src/app/components/find/find.component.ts","webpack:///./src/app/components/list-of-places/list-of-places.component.css","webpack:///./src/app/components/list-of-places/list-of-places.component.html","webpack:///./src/app/components/list-of-places/list-of-places.component.ts","webpack:///./src/app/components/list-of-stations/list-of-stations.component.css","webpack:///./src/app/components/list-of-stations/list-of-stations.component.html","webpack:///./src/app/components/list-of-stations/list-of-stations.component.ts","webpack:///./src/app/places.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".mat-toolbar {\\r\\n    background:purple;\\r\\n    color: white;\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n  .fill-remaining-space {\\r\\n    /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\r\\n    text-align: center;\\r\\n    flex: 1 1 auto;\\r\\n\\r\\n  }\\r\\n\\r\\n\\r\\n \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTs7Q0FFaEI7OztFQUdDO0lBQ0U7c0RBQ2tEO0lBQ2xELG1CQUFtQjtJQUNuQixlQUFlOztHQUVoQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10b29sYmFyIHtcclxuICAgIGJhY2tncm91bmQ6cHVycGxlO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG5cclxufVxyXG5cclxuXHJcbiAgLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAgIC8qIFRoaXMgZmlsbHMgdGhlIHJlbWFpbmluZyBzcGFjZSwgYnkgdXNpbmcgZmxleGJveC4gXHJcbiAgICAgICBFdmVyeSB0b29sYmFyIHJvdyB1c2VzIGEgZmxleGJveCByb3cgbGF5b3V0LiAqL1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcblxyXG4gIH1cclxuXHJcblxyXG4gIl19 */\"","module.exports = \"<mat-toolbar text-align=center>\\n  <span> Chicago Social Hub </span> \\n  &nbsp; &nbsp; &nbsp; \\n\\n  <mat-icon >restaurant</mat-icon>  \\n  <mat-icon >local_bar</mat-icon>\\n  <mat-icon >local_cafe</mat-icon>\\n\\n\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n\\n</mat-toolbar> \\n\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ChicagoSocialHub-app';\n}\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for\n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AgmCoreModule, GoogleMapsAPIWrapper } from '@agm/core';\n\n\nimport { MatToolbarModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { PlacesService } from './places.service';\n\nimport { FindComponent } from './components/find/find.component';\nimport { ListOfPlacesComponent } from './components/list-of-places/list-of-places.component';\nimport { ListOfStationsComponent } from './components/list-of-stations/list-of-stations.component';\n\n\n\n\nconst routes: Routes = [\n  { path: 'find', component: FindComponent},\n  { path: 'list_of_places', component: ListOfPlacesComponent},\n  { path: 'list_of_stations', component: ListOfStationsComponent},\n\n\n\n  { path: '', redirectTo: 'find', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FindComponent,\n    ListOfPlacesComponent,\n    ListOfStationsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////// SETUP NEEDED ////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\n\n//  1. Create your API key from Google Developer Website\n//  2. Install AGM package: npm install @agm/core @ng-bootstrap/ng-bootstrap --\n//  3. Here is the URL for an online IDE for NG and TS that could be used to experiment\n//  4. AGM live demo is loacted at this URL: https://stackblitz.com/edit/angular-google-maps-demo\n\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////\n\n\n    AgmCoreModule.forRoot({apiKey: 'AIzaSyBYgaNboYcj9WFaFx5VFVzWZeWPDSF6f2k'}),\n    FormsModule,\n    NgbModule\n  ],\n\n  providers: [PlacesService, GoogleMapsAPIWrapper],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".create-form {\\r\\n    min-width: 150px;\\r\\n    width: 75%;\\r\\n    align-items: center;\\r\\n    justify-content : center;\\r\\n}\\r\\n\\r\\n.field-full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-icon {\\r\\n    background: purple;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n.mat-button, .mat-raised-button{\\r\\n    background-color:purple;\\r\\n    color: white;\\r\\n\\r\\n} \\r\\n  \\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9maW5kL2ZpbmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsb0JBQW9CO0lBQ3BCLHlCQUF5QjtDQUM1Qjs7QUFFRDtJQUNJLFlBQVk7Q0FDZjs7QUFHRDtJQUNJLG1CQUFtQjtJQUNuQixhQUFhO0NBQ2hCOztBQUdEO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixZQUFZO0dBQ2I7O0FBR0Q7SUFDRSx3QkFBd0I7SUFDeEIsYUFBYTs7Q0FFaEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2ZpbmQvZmluZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyZWF0ZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICB3aWR0aDogNzUlO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudCA6IGNlbnRlcjtcclxufVxyXG5cclxuLmZpZWxkLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4ubWF0LWljb24ge1xyXG4gICAgYmFja2dyb3VuZDogcHVycGxlO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcblxyXG4gIC5tYXQtYnV0dG9uLCAubWF0LXJhaXNlZC1idXR0b257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnB1cnBsZTtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuXHJcbn0gXHJcbiAgXHJcbiAgIl19 */\"","module.exports = \"<div>\\n    <br>\\n    <mat-card>\\n  \\n      <mat-divider></mat-divider>\\n      <br>\\n      <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n  \\n        \\n       \\n                <mat-form-field class=\\\"field-full-width\\\">\\n                    <mat-label color=blue> Find</mat-label>\\n                    <input align=\\\"start\\\" matInput  formControlName=\\\"find\\\" #find>\\n                    <mat-hint [ngStyle]=\\\"{color: hintColor}\\\">Restaurants, Bars, Cafe, ... </mat-hint>\\n                  </mat-form-field> \\n    \\n                  <br><br>\\n  \\n                <mat-form-field  class=\\\"field-full-width\\\">\\n                    <mat-label color=blue> Where</mat-label>\\n                    <input align=\\\"start\\\" matInput  formControlName=\\\"where\\\" #where>\\n                    <mat-hint [ngStyle]=\\\"{color: hintColor}\\\">Near me, ... </mat-hint>\\n\\n                  </mat-form-field>  \\n  \\n                  <br><br>\\n  \\n                <mat-divider></mat-divider>\\n                  <br><br>\\n  \\n                <button type=\\\"submit\\\" (click)=\\\"findPlaces(find.value,  where.value)\\\"  mat-raised-button >\\n                    Go\\n                    &nbsp; &nbsp; &nbsp; \\n                    <mat-icon>search</mat-icon>      \\n                </button>          \\n                  \\n                  \\n      </form>\\n    </mat-card>\\n  </div>\\n  \\n  \\n \"","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for   \n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router'; \nimport { PlacesService } from '../../places.service';\n\n\n\n@Component({\n  selector: 'app-find',\n  templateUrl: './find.component.html',\n  styleUrls: ['./find.component.css']\n})\nexport class FindComponent implements OnInit {\n\n  createForm: FormGroup;\n  hintColor;\n\n\n  constructor(private placesService: PlacesService, private fb: FormBuilder, private router: Router) {\n    this.hintColor = \"#76FF03\";\n    this.createForm = this.fb.group({\n      where: '',\n      find: ''\n\n    });\n  }\n\n  findPlaces(find, where) {\n     \n    this.placesService.findPlaces(find, where).subscribe(() => {\n\n      this.router.navigate(['/list_of_places']);\n\n    });\n\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-right {\\r\\n    text-align: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0LW9mLXBsYWNlcy9saXN0LW9mLXBsYWNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtDQUNmOztBQUVEO0lBQ0ksbUJBQW1CO0NBQ3RCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9saXN0LW9mLXBsYWNlcy9saXN0LW9mLXBsYWNlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtY29sdW1uLXJpZ2h0IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdfQ== */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/find\\\">\\n      Find Another Place\\n      &nbsp; &nbsp; &nbsp; \\n      <mat-icon>search</mat-icon>    \\n    </button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"places\\\">\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"display_phone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Phone</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.display_phone}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"address1\\\">\\n        <th mat-header-cell *matHeaderCellDef>Address</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address1}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"is_closed\\\">\\n        <th mat-header-cell *matHeaderCellDef>Closed</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.is_closed}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"rating\\\">\\n        <th mat-header-cell *matHeaderCellDef>Rating</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.rating}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"review_count\\\">\\n        <th mat-header-cell *matHeaderCellDef>Review Count</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.review_count}} </td>\\n      </ng-container>\\n\\n\\n      <ng-container matColumnDef=\\\"Divvy\\\">\\n        <th mat-header-cell *matHeaderCellDef class=\\\"mat-column-right\\\"></th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"mat-column-right\\\">\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"findStations(element.name)\\\">Divvy Near by</button>\\n        </td>\\n      </ng-container>\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\\n\"","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for   \n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { Place } from '../../place';\nimport { PlacesService } from '../../places.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n\n@Component({\n  selector: 'app-list-of-places',\n  templateUrl: './list-of-places.component.html',\n  styleUrls: ['./list-of-places.component.css']\n})\n\n\nexport class ListOfPlacesComponent implements OnInit {\n\n  uri = 'http://localhost:4000';\n\n  places: Place[]=[];\n\n  \n  displayedColumns = ['name', 'display_phone', 'address1', 'is_closed', 'rating','review_count', 'Divvy'];\n\n  constructor(private placesService: PlacesService, private router: Router, private http: HttpClient) { }\n\n  \n  ngOnInit() {\n\n    this.fetchPlaces();\n\n  }\n\n\n\n\n\n  fetchPlaces() {\n    this.placesService\n      .getPlaces()\n      .subscribe((data: Place[]) => {\n        this.places = data;\n\n      });\n  }\n\n\n\n  \n  findStations(placeName) {\n\n    for (var i = 0,len = this.places.length; i < len; i++) {\n\n      if ( this.places[i].name === placeName ) { // strict equality test\n\n          var place_selected =  this.places[i];\n\n          break;\n      }\n    }\n\n\n    this.placesService.findStations(placeName).subscribe(() => {\n      this.router.navigate(['/list_of_stations']);\n    });\n\n  }\n\n\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-right {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nagm-map {\\r\\n    height: 500px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0LW9mLXN0YXRpb25zL2xpc3Qtb2Ytc3RhdGlvbnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7Q0FDZjs7QUFFRDtJQUNJLG1CQUFtQjtDQUN0Qjs7QUFFRDtJQUNJLGNBQWM7Q0FDakIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xpc3Qtb2Ytc3RhdGlvbnMvbGlzdC1vZi1zdGF0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtY29sdW1uLXJpZ2h0IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuYWdtLW1hcCB7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG59Il19 */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/find\\\">\\n      Find Another Place\\n      &nbsp; &nbsp; &nbsp; \\n      <mat-icon>search</mat-icon>    \\n    </button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"stations\\\">\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef>ID</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"stationName\\\">\\n        <th mat-header-cell *matHeaderCellDef>stationName</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.stationName}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"availableBikes\\\">\\n        <th mat-header-cell *matHeaderCellDef>availableBikes</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.availableBikes}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"availableDocks\\\">\\n        <th mat-header-cell *matHeaderCellDef>availableDocks</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.availableDocks}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"is_renting\\\">\\n        <th mat-header-cell *matHeaderCellDef>is_renting</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.is_renting}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"lastCommunicationTime\\\">\\n        <th mat-header-cell *matHeaderCellDef>lastCommunicationTime </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastCommunicationTime}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"latitude\\\">\\n        <th mat-header-cell *matHeaderCellDef>latitude</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.latitude}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"longitude\\\">\\n        <th mat-header-cell *matHeaderCellDef>longitude</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.longitude}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef>status</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n      </ng-container>\\n\\n        <th mat-header-cell *matHeaderCellDef>totalDocks</th>\\n      <ng-container matColumnDef=\\\"totalDocks\\\">\\n        <th mat-header-cell *matHeaderCellDef>totalDocks</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.totalDocks}} </td>\\n      </ng-container>\\n\\n\\n\\n\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\\n\\n\\n\\n<agm-map [(latitude)]=\\\"location.lat\\\" [(longitude)]=\\\"location.lng\\\" [(zoom)]=\\\"location.zoom\\\" [disableDefaultUI]=\\\"true\\\" [zoomControl]=\\\"true\\\" >\\n\\n  <!-- Possible icons to use -->\\n  <!--  http://maps.google.com/mapfiles/ms/icons/green-dot.png   -->\\n  <!--  http://maps.google.com/mapfiles/ms/icons/blue-dot.png    -->\\n  <!--  http://maps.google.com/mapfiles/ms/icons/red-dot.png     -->\\n\\n\\n  <!-- Google Maps Developer - Docs -->\\n  <!--  https://developers.google.com/maps/documentation/   -->\\n\\n\\n  <!-- Angular Google Maps - Docs -->\\n  <!--  https://angular-maps.com/   -->\\n\\n\\n\\n  <!-- Angular Google Maps - Demo -->\\n  <!--  https://stackblitz.com/edit/angular-google-maps-demo?file=app%2Fapp.module.ts   -->\\n\\n\\n\\n  <agm-marker \\n  (markerClick)=\\\"clickedMarker('Union Station', 0)\\\"\\n  [latitude]=\\\"location.lat\\\"\\n  [longitude]=\\\"location.lng\\\"\\n  [iconUrl]= \\\"icon\\\"\\n  [label]=\\\"{ color: 'white', text: 'You are Here'}\\\">\\n\\n  <agm-info-window #infoWindow>\\n    <strong>You are currently here by the Union Station</strong>\\n\\n  </agm-info-window>\\n  </agm-marker>\\n\\n\\n \\n\\n  <agm-marker \\n  (markerClick)=\\\"clickedMarker('placeSelected', 0)\\\"\\n  [latitude]=\\\"placeSelected.latitude\\\"\\n  [longitude]=\\\"placeSelected.longitude\\\"\\n  [iconUrl] = \\\"{ url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\\n                scaledSize: {\\n                  width: 40,\\n                  height: 60\\n              }}\\\" >\\n\\n  <agm-info-window #infoWindow>\\n    <strong>You have selected this place</strong>\\n    <br><br><br>\\n    <strong>Name: {{placeSelected.name}}</strong>\\n    <br><br>\\n    <strong>Phone: {{placeSelected.display_phone}}</strong>\\n    <br><br>\\n    <strong>Address: {{placeSelected.address1}}</strong>\\n  </agm-info-window>\\n  </agm-marker>\\n\\n \\n\\n\\n\\n  <agm-marker \\n    *ngFor=\\\"let m of markers; let i = index\\\"\\n    (markerClick)=\\\"clickedMarker(m.stationName, i)\\\"\\n    [latitude]=\\\"m.latitude\\\"\\n    [longitude]=\\\"m.longitude\\\"\\n    [label]=\\\"m.id\\\">\\n  \\n    <agm-info-window #infoWindow>\\n      <strong>Divvy Station</strong>\\n      <br><br>\\n      <strong>stationName: {{m.stationName}}</strong>\\n      <br><br>\\n      <strong>status: {{m.status}}</strong>\\n      <br><br>\\n      <strong>availableDocks: {{m.availableDocks}}</strong>\\n    </agm-info-window>\\n\\n\\n  </agm-marker>\\n\\n\\n\\n\\n  <agm-circle [latitude]=\\\"location.lat\\\" [longitude]=\\\"location.lng\\\"\\n  [(radius)]=\\\"circleRadius\\\"\\n  [fillColor]=\\\"'blue'\\\"\\n  [circleDraggable]=\\\"true\\\"\\n  [editable]=\\\"true\\\"></agm-circle>\\n\\n  \\n</agm-map>\\n\\n\"","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for   \n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Station } from '../../station';\nimport { PlacesService } from '../../places.service';\n\n\nimport { Input, ViewChild, NgZone} from '@angular/core';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core/services';\nimport { Place } from 'src/app/place';\n\n\n\n\ninterface Location {\n  lat: number;\n  lng: number;\n  zoom: number;\n  address_level_1?:string;\n  address_level_2?: string;\n  address_country?: string;\n  address_zip?: string;\n  address_state?: string;\n  label: string;\n}\n\n\n\n@Component({\n  selector: 'app-list-of-stations',\n  templateUrl: './list-of-stations.component.html',\n  styleUrls: ['./list-of-stations.component.css']\n})\nexport class ListOfStationsComponent implements OnInit {\n\n  stations: Station[];\n  markers: Station[];\n  placeSelected: Place;\n\n  displayedColumns = ['id', 'stationName', 'availableBikes', 'availableDocks', 'is_renting', 'lastCommunicationTime', 'latitude',  'longitude', 'status', 'totalDocks'];\n\n\n  icon = {\n    url: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',\n    scaledSize: {\n      width: 60,\n      height: 60\n    }\n  }\n\n\n\n  constructor(private placesService: PlacesService, private router: Router) { }\n\n  ngOnInit() {\n    this.fetchStations();\n    this.getPlaceSelected();\n\n\n  }\n\n  fetchStations() {\n    this.placesService\n      .getStations()\n      .subscribe((data: Station[]) => {\n        this.stations = data;\n        this.markers = data;\n\n      });\n  }\n\n\n  getPlaceSelected() {\n    this.placesService\n      .getPlaceSelected()\n      .subscribe((data: Place) => {\n        this.placeSelected = data;\n\n      });\n  }\n\n\n\nclickedMarker(label: string, index: number) {\n  console.log(`clicked the marker: ${label || index}`)\n}\n\n\ncircleRadius:number = 3000; // km\n\npublic location:Location = {\n  lat: 41.882607,\n  lng: -87.643548,\n  label: 'You are Here',\n  zoom: 13\n};\n\n\n\n\n\n\n}\n\n\n\n","////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n/// This file and the source code provided can be used only for   \n/// the projects and assignments of this course\n\n/// Last Edit by Dr. Atef Bader: 1/30/2019\n\n\n////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////\n\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { HttpHeaders } from '@angular/common/http';\n\n\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\nimport { Place } from './place';\n\n\n\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n\n  uri = 'http://localhost:4000';\n\n  constructor(private http: HttpClient) { \n \n\n  }\n\n\n\n  getPlaces() : Observable<Place[]> {\n    return this.http.get<Place[]>(`${this.uri}/places`);\n  }\n \n\n  getPlaceSelected() {\n    return this.http.get(`${this.uri}/place_selected`);\n  }\n\n\n  getStations() {\n    return this.http.get(`${this.uri}/stations`);\n  }\n\n\n\n  findPlaces(find, where) {\n    const find_places_at = {\n      find: find,\n      where: where\n    };\n\n    return this.http.post(`${this.uri}/places/find`, find_places_at, httpOptions);\n\n  }\n\n \n\n\n  findStations(placeName) {\n    const find_stations_at = {\n      placeName: placeName\n    };\n\n    var str = JSON.stringify(find_stations_at, null, 2);\n\n\n    return this.http.post(`${this.uri}/stations/find`, find_stations_at, httpOptions);\n\n  }\n\n\n \n\n\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}